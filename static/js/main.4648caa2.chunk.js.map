{"version":3,"sources":["assets/cart-outline.svg","components/Navbar.js","redux/reducers/setBooksReducer.js","redux/reducers/cartReducer.js","components/Books.js","components/Loader.js","components/Home.js","components/Cart.js","App.js","serviceWorker.js","redux/store.js","index.js"],"names":["module","exports","Navbar","counter","useSelector","state","cart","className","Segment","clearing","Header","as","floated","color","to","src","alt","Badge","variant","length","initialState","books","isFetched","Books","author","image","price","rating","title","dispatch","useDispatch","Card","Image","Content","Meta","extra","Icon","name","Button","onClick","e","preventDefault","item","id","Date","now","toString","type","payload","Loader","Home","useEffect","a","fetch","response","json","Group","itemsPerRow","map","i","key","Cart","items","totalPrice","total","reduce","book","setTotalPrice","size","verticalAlign","App","Container","fluid","exact","path","component","Boolean","window","location","hostname","match","rootReducer","combineReducers","action","concat","filter","sort","b","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4648caa2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cart-outline.76237921.svg\";","import React from 'react';\r\nimport cart from '../assets/cart-outline.svg';\r\nimport {useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Badge } from 'react-bootstrap';\r\nimport { Header, Segment } from 'semantic-ui-react'\r\n\r\nfunction Navbar() {\r\n    const counter = useSelector(state => state.cart.cart);\r\n\r\n    return (\r\n        <div className=\"header\">\r\n         <Segment clearing>\r\n            <Header as='h2' floated='left' color='red'>\r\n              <Link to='/'>BookStore</Link>\r\n                </Header>\r\n            <Header as='h2' floated='right'>\r\n                <nav>\r\n                    <ul>\r\n                        <li><Link to='/'>Home</Link></li>\r\n                        <li><Link to='/About'>About</Link></li>\r\n                        <li><Link to='/Cart'>Cart</Link></li>\r\n                        <img src={cart} alt=\"cartimg\" className=\"cart_img\" />\r\n                        <Badge variant=\"light\">{counter.length}</Badge>\r\n                    </ul>\r\n                </nav>\r\n            </Header>\r\n        </Segment>\r\n\r\n        </div>\r\n       \r\n    );\r\n}\r\n\r\nexport default Navbar;","const initialState = {\r\n    books: [],\r\n    isFetched: false,\r\n}\r\n\r\nexport const SET_BOOKS = 'SET_BOOKS';\r\n\r\n\r\nexport const setBooks = (books) =>{\r\n    return async dispatch => {\r\n        const response = await fetch('http://localhost:3000/books');\r\n        const json = await response.json();\r\n        dispatch({\r\n            type: SET_BOOKS,\r\n            payload: json\r\n        });\r\n    }\r\n }\r\n  \r\n const SET_FILTER_LOWER = 'SET_FILTER_LOWER';\r\n\r\n export const setFilter = filter => ({\r\n   type: SET_FILTER_LOWER,\r\n   payload: filter,\r\n });\r\n\r\n export const setBooksReducer = (state = initialState, action) =>{\r\n     switch(action.type){\r\n        case SET_BOOKS:\r\n            return {...state, \r\n                books: state.books.concat(action.payload),\r\n                isFetched: true\r\n            }\r\n        case SET_FILTER_LOWER:\r\n        return {\r\n          ...state,\r\n          books: action.payload.sort((a,b)=>a.price-b.price)\r\n        //   books: action.payload.filter((el)=>el.price<=300)\r\n        };\r\n        default: \r\n        return state\r\n\r\n     }\r\n      \r\n}","const initialState = {\r\n    cart: [],\r\n}\r\n\r\nexport const ADD_IN_TO_CART = 'ADD_IN_TO_CART';\r\nexport const DELETE_FROM_CART = 'DELETE_FROM_CART';\r\nexport const SET_TOTAL_PRICE = 'SET_TOTAL_PRICE';\r\n\r\nexport function setCounterItems(counter) {\r\n    return {\r\n        type: ADD_IN_TO_CART,\r\n        payload: counter\r\n    }\r\n}\r\n\r\nexport function deleteItems(book) {\r\n    return {\r\n        type: DELETE_FROM_CART,\r\n        payload: book\r\n    }\r\n}\r\nexport function setTotalPrice(total) {\r\n    return {\r\n        type: SET_TOTAL_PRICE,\r\n        payload: total\r\n    }\r\n}\r\n\r\n export const cartReducer = (state = initialState, action) =>{\r\n     switch(action.type){\r\n        case ADD_IN_TO_CART:\r\n            return{\r\n                ...state,\r\n                 cart: state.cart.concat([action.payload]),\r\n                 \r\n\r\n            }\r\n        case DELETE_FROM_CART:\r\n            return{\r\n                ...state,\r\n                 cart: state.cart.filter(i=>i.id != action.payload),\r\n        \r\n                 \r\n                \r\n            }\r\n        case SET_TOTAL_PRICE:\r\n            return{\r\n                ...state,\r\n                //   totalPrice: action.payload.reduce((total, book) => total + book.price, 0)\r\n            }\r\n            \r\n        default: \r\n        return state\r\n\r\n     }\r\n      \r\n}","import React from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setCounterItems } from '../redux/reducers/cartReducer.js';\r\nimport { Card, Image, Icon, Button } from 'semantic-ui-react';\r\n\r\n\r\n\r\nfunction Books({ author, image, price, rating, title }) {\r\n    \r\n\r\n    const dispatch = useDispatch();\r\n    const setCounter = (e) => {\r\n        e.preventDefault();\r\n        const item = {\r\n            id: Date.now().toString(),\r\n            title: title,\r\n            author: author,\r\n            image: image,\r\n            price: price,\r\n            rating: rating,\r\n        }\r\n        dispatch(setCounterItems(item))\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <div className=\"card-image\">\r\n                <Image src={image} />\r\n            </div>\r\n            <Card.Content>\r\n                <Card.Header>{title}</Card.Header>\r\n                <Card.Meta>\r\n                    <span className=\"date\">{author}</span>\r\n                </Card.Meta>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                <a>\r\n                    <Icon name=\"rub\" />\r\n                    {price}\r\n                </a>\r\n            </Card.Content>\r\n            <Button onClick={setCounter} color='green'>\r\n                Добавить в корзину\r\n            </Button>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Books;\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"lds-ring\">\r\n            <div></div><div></div><div></div><div></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setBooks} from '../redux/reducers/setBooksReducer.js';\r\nimport Books from '../components/Books.js';\r\nimport Loader from './Loader.js';\r\nimport { Card } from 'semantic-ui-react';\r\n\r\n\r\n\r\n\r\nfunction Home() {\r\n    const books = useSelector(state=>state.books.books);\r\n    const isFetched = useSelector(state=>state.books.isFetched);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n      if(!books.length ){\r\n        dispatch(setBooks())\r\n      } \r\n    },[books]\r\n);\r\n    \r\n\r\n    return (\r\n       \r\n      <Card.Group itemsPerRow={5}>\r\n                {!isFetched ?  <Loader/> : books.map(i=>(<Books title = {i.title}\r\n                 key={i.id}\r\n                 author={i.author} \r\n                 image={i.image} \r\n                 price={i.price}\r\n                 rating={i.rating}\r\n                 />))}\r\n        </Card.Group>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteItems, setTotalPrice } from '../redux/reducers/cartReducer.js';\r\nimport { Divider, Image, Button, Icon } from 'semantic-ui-react'\r\n\r\nconst Cart = () => {\r\n    const items = useSelector(state => state.cart.cart);\r\n    const totalPrice = useSelector(state => state.cart.totalPrice);\r\n    const dispatch = useDispatch();\r\n    const total = items.reduce((item, book) => item + book.price, 0);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(setTotalPrice(items));\r\n    }, []);\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"books_container\">\r\n            {!items.length ?   <div className=\"empty_cart\"><h1>Cart is Empty</h1></div>  : items.map(i => (\r\n                <div className=\"product\" key={i.id}>\r\n                    <Image src={i.image} alt=\"book-image\" size='tiny' verticalAlign='top' />\r\n                    <span className=\"sm-hide\"><strong>{i.author}</strong></span>\r\n                    <span className=\"sm-hide\">{i.title}</span>\r\n                    <span className=\"sm-hide\">Rating:{i.rating}</span>\r\n                    <span><Icon name=\"rub\" />{i.price}</span>\r\n                    <div className=\"price sm-hide\">\r\n                    <Button size='mini' color='red' onClick={()=>dispatch(deleteItems(i.id))}>&times;</Button>\r\n                  </div>\r\n                </div>\r\n               \r\n               \r\n            ))}\r\n            {!items.length ? '' : <div className=\"total\"><h3>Total price: {!items.length ? '0' : total} <Icon name=\"rub\" /></h3></div>}\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Cart;\r\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from \"./components/Navbar\";\nimport Home from './components/Home.js';\nimport Cart from './components/Cart.js';\nimport MenuFilter from './components/MenuFilter.js'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Container, Row } from 'react-bootstrap';\n\n\n\n\n\n\nfunction App() {\n    return (\n        <Container fluid className=\"App\" >\n            <BrowserRouter>\n                <Navbar />\n                {/* <MenuFilter/> */}\n                <Switch>\n                    <Route exact path=\"/\" component={Home} />\n                    <Route path=\"/cart\" component={Cart} />\n                </Switch>\n\n\n            </BrowserRouter>\n\n\n\n\n\n\n        </Container>\n    );\n}\n\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers, createStore,applyMiddleware} from \"redux\";\r\nimport {cartReducer} from \"./reducers/cartReducer\";\r\nimport {setBooksReducer} from \"./reducers/setBooksReducer\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from \"redux-thunk\";\r\nimport filterReducer from \"./reducers/filterReducer\";\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n        cart: cartReducer,\r\n        books: setBooksReducer,\r\n        // filter: filterReducer,\r\n}\r\n);\r\n\r\n export const store = createStore(rootReducer, composeWithDevTools(\r\n     applyMiddleware(thunk),\r\n ));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport {store} from \"./redux/store\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n  \n      <Provider store={store}>\n          <App />\n      </Provider>\n\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}